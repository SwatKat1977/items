name: Validate Branch (lint & unittests)

on:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-24.04
    steps:
      # Step 1: Checkout code with full history
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Adjust to your Python version

  detect-changes:
    runs-on: ubuntu-latest
    needs: setup  # Wait for the setup job to complete
    outputs:
      accounts_svc_changed: ${{ steps.detect.outputs.accounts_svc_changed }}
      cms_svc_changed: ${{ steps.detect.outputs.cms_svc_changed }}
      gateway_svc_changed: ${{ steps.detect.outputs.gateway_svc_changed }}
      web_portal_svc_changed: ${{ steps.detect.outputs.web_portal_svc_changed }}
      shared_changed: ${{ steps.detect.outputs.shared_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # Checkout the head commit of the PR

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}  # Fetch the base branch

      - name: Detect changes in directories
        id: detect
        run: |
          echo "Checking for changes in items/accounts_svc/"
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} \
            ${{ github.event.pull_request.head.sha }} \
              | grep -qE '^items/accounts_svc/|^items/unittests_accounts_svc/'; then
            echo "accounts_svc_changed=true" >> $GITHUB_OUTPUT
            echo "[INFO] items/accounts_svc has changed"
          else
            echo "accounts_svc_changed=false" >> $GITHUB_OUTPUT
          fi

          echo "Checking for changes in items/cms_svc/"
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} \
            ${{ github.event.pull_request.head.sha }} \
              | grep -qE '^items/cms_svc/|^items/unittests_cms_svc/'; then
            echo "cms_svc_changed=true" >> $GITHUB_OUTPUT
            echo "[INFO] items/cms_svc has changed"
          else
            echo "cms_svc_changed=false" >> $GITHUB_OUTPUT
          fi

          echo "Checking for changes in items/gateway_svc/"
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} \
            ${{ github.event.pull_request.head.sha }} \
              | grep -qE '^items/gateway_svc/|^items/unittests_gateway_svc/'; then
            echo "gateway_svc_changed=true" >> $GITHUB_OUTPUT
            echo "[INFO] items/gateway_svc has changed"
          else
            echo "gateway_svc_changed=false" >> $GITHUB_OUTPUT
          fi
          
          echo "Checking for changes in items/web_portal_svc/"
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} \
            ${{ github.event.pull_request.head.sha }} \
              | grep -qE '^items/web_portal_svc/|^items/unittests_web_portal_svc/'; then
            echo "web_portal_svc_changed=true" >> $GITHUB_OUTPUT
            echo "[INFO] items/web_portal_svc has changed"
          else
            echo "web_portal_svc_changed=false" >> $GITHUB_OUTPUT
          fi

          echo "Checking for changes in items/shared/"
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} \
            ${{ github.event.pull_request.head.sha }} \
              | grep -qE '^items/shared/|^items/unittests_shared/'; then
            echo "shared_changed=true" >> $GITHUB_OUTPUT
            echo "[INFO] items/shared has changed"
          else
            echo "shared_changed=false" >> $GITHUB_OUTPUT
          fi

  verify_accounts-svc:
    runs-on: ubuntu-24.04
    needs: [setup, detect-changes]  # Wait for both setup and detect-changes
    if: needs.detect-changes.outputs.accounts_svc_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema aiohttp quart pylint

      - name: Run Pylint
        env:
          PYTHONPATH: items/shared:items/accounts_svc
        run: |
          pylint --fail-under=10.0 items/accounts_svc

      # Run tests and measure coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: items/shared:items/unittests_accounts_svc:items/accounts_svc
        run: |
          coverage run --rcfile=.github/workflows/.coveragerc_accounts_svc -m unittest -v main
          coverage report -m --fail-under=100

  verify_cms-svc:
    runs-on: ubuntu-24.04
    needs: [setup, detect-changes]  # Wait for both setup and detect-changes
    if: needs.detect-changes.outputs.cms_svc_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage jsonschema aiohttp quart pylint

      - name: Run Pylint
        env:
          PYTHONPATH: items/shared:items/cms_svc
        run: |
          pylint --fail-under=10.0 items/cms_svc

      # Run tests and measure coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: items/shared:items/unittests_cms_svc:items/cms_svc
        run: |
          coverage run --rcfile=.github/workflows/.coveragerc_cms_svc -m unittest -v main
          coverage report -m --fail-under=100

  verify_gateway-svc:
    runs-on: ubuntu-24.04
    needs: [setup, detect-changes]  # Wait for both setup and detect-changes
    if: needs.detect-changes.outputs.gateway_svc_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage jsonschema aiohttp quart pylint

      - name: Run Pylint
        env:
          PYTHONPATH: items/shared:items/gateway_svc
        run: |
          pylint --fail-under=10.0 items/gateway_svc

      # Run tests and measure coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: items/shared:items/unittests_gateway_svc:items/gateway_svc
        run: |
          coverage run --rcfile=.github/workflows/.coveragerc_gateway_svc -m unittest -v main
          coverage report -m --fail-under=100

  verify_web-portal-svc:
    runs-on: ubuntu-24.04
    needs: [setup, detect-changes]  # Wait for both setup and detect-changes
    if: needs.detect-changes.outputs.web_portal_svc_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage jsonschema aiohttp quart pylint

      - name: Run Pylint
        env:
          PYTHONPATH: items/shared:items/web_portal_svc
        run: |
          pylint --fail-under=10.0 items/web_portal_svc

      # Run tests and measure coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: items/shared:items/unittests_web_portal_svc:items/web_portal_svc
        run: |
          coverage run --rcfile=.github/workflows/.coveragerc_web_portal_svc -m unittest -v main
          coverage report -m --fail-under=100

  shared-lint:
    runs-on: ubuntu-24.04
    needs: [setup, detect-changes]  # Wait for both setup and detect-changes
    if: needs.detect-changes.outputs.shared_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage jsonschema aiohttp quart pylint

      - name: Run Pylint
        env:
          PYTHONPATH: items/shared
        run: |
          pylint --fail-under=10.0 items/shared

      # Run tests and measure coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: items/shared:items/unittests_shared
        run: |
          coverage run --rcfile=.github/workflows/.coveragerc_shared -m unittest -v main
          coverage report -m --fail-under=100
